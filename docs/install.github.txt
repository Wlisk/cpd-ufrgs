# installing git command line tool
https://github.com/git-guides/install-git
https://git-scm.com/downloads

# configure ssh to access repositories
https://docs.github.com/pt/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
https://dev.to/dxwebster/como-conectar-ao-github-com-chaves-ssh-1i41

# rename the branch to instead of 'master' to be renamed as 'main'
> git config --global init.defaultBranch 'main'

# configure global user email and name
> git config --global user.email "you@example.com"
> git config --global user.name "Your Name"

# configure global signature for commits (optional)
https://docs.gitlab.com/ee/user/project/repository/ssh_signed_commits/
https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification
> git config --global gpg.format ssh
> git config --global user.signingkey ~/.ssh/id_ed25519.pub
> git config --global commit.gpgsign true
	signing commits automatically
	
	# configure sign locally
	1> touch allowed_signers
		create a new file on the git project folder
	2> git config gpg.ssh.allowedSignersFile "$(pwd)/allowed_signers"
		configure the signature on the current working direcoty [$(pwd)]
	3> echo "$(git config --get user.email) namespaces=\"git\" $(cat ~/.ssh/id_ed25519.pub)" >> ~/.ssh/allowed_signers
		write and save the signature into the folder of ssh keys
		change id_ed25519 for the name of your public SSH key connect with github
	4> add the content of id_ed25519 as signing key to github 
	   https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account
	







